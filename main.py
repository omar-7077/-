from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters
from datetime import datetime

TOKEN = "7597887705:AAEQr0g_aWxoZb6o1QC5geKZ3GzCBQtl7fY"

main_menu = [
    ["ููุนุฏ ุงูููุงูุฃุฉ", "ุฃุฑูุงู ุงูุชูุงุตู"],
    ["ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ", "ุชูููู ุงูุฏูุงุชุฑุฉ"],
    ["ููุธููุฉ ุงูุฌุงูุนุฉ", "ุงูุจูุงู ุจูุฑุฏ"],
    ["ูููุน ุฌุงูุนุฉ ุงูุทูุงุจ", "ูููุน ุฌุงูุนุฉ ุงูุทุงูุจุงุช"],
    ["ุญูู ุงูุชุฎุฑุฌ", "ุฏููู ุงูุชุฎุตุตุงุช"],
    ["ูุฑูุจ ุจูุน ุงููุชุจ", "ูุฑูุจ ุงููุตู ุงูุตููู"],
    ["ูุฑูุจุงุช ุงููููุงุช", "ูุฑูุจุงุช ูุฑูุน ุงูุฌุงูุนุฉ"],
    ["ุงูุชูููู ุงูุฃูุงุฏููู", "ุญุณุงุจ ุงููุนุฏู ุงููุตูู"]  # ุฃุถูุช ููุง ุฒุฑ ุญุณุงุจ ุงููุนุฏู
]

reply_markup = ReplyKeyboardMarkup(main_menu, resize_keyboard=True)
shown_welcome = set()

academic_events = [
    ("ุทูุจ ุฅุนุงุฏุฉ ุงูููุฏ", "2025-01-05", "2025-01-18"),
    ("ุชุฃุฌูู ุงูุฏุฑุงุณุฉ", "2025-01-05", "2025-01-14"),
    ("ุงุณุชูุจุงู ุทูุจุงุช ุงูุฒูุงุฑุฉ", "2025-01-05", "2025-01-16"),
    ("ุจุฏุงูุฉ ุงูุฏุฑุงุณุฉ ูููุตู ุงูุฏุฑุงุณู ุงูุซุงูู", "2025-01-12", "2025-06-26"),
    ("ุงูุฅุนุชุฐุงุฑ ุนู ุงูุฏุฑุงุณุฉ", "2025-01-19", "2025-05-10"),
    ("ุชูุฏูู ุฃุนุฐุงุฑ ุงูุงุฎุชุจุงุฑุงุช", "2025-01-19", "2025-02-20"),
    ("ููู ุงูุชุฃุณูุณ", "2025-02-23", "2025-02-23"),
    ("ุฅุฌุงุฒุฉ ููุชุตู ุงููุตู ุงูุซุงูู", "2025-02-24", "2025-03-01"),
    ("ุจุฏุงูุฉ ุงูุฏุฑุงุณุฉ ุจุนุฏ ุฅุฌุงุฒุฉ ููุชุตู ุงููุตู", "2025-03-02", "2025-03-13"),
    ("ุจุฏุงูุฉ ุฅุฌุงุฒุฉ ุนูุฏ ุงููุทุฑ", "2025-03-13", "2025-04-05"),
    ("ุจุฏุงูุฉ ุงูุฏุฑุงุณุฉ ุจุนุฏ ุฅุฌุงุฒุฉ ุนูุฏ ุงููุทุฑ", "2025-04-06", "2025-06-26"),
    ("ุงูุงุนุชุฐุงุฑ ุนู ููุฑุฑ ุฏุฑุงุณู", "2025-04-13", "2025-04-17"),
    ("ุงูุงุฎุชุจุงุฑุงุช ุงูุจุฏููุฉ", "2025-04-20", "2025-04-24"),
    ("ุงูุงุฎุชุจุงุฑุงุช ุงูููุงุฆูุฉ", "2025-05-18", "2025-05-26"),
    ("ุฅุฏุฎุงู ุฑุบุจุงุช ุชุบููุฑ ุงูุชุฎุตุต", "2025-05-25", "2025-06-30"),
    ("ุฅุฌุงุฒุฉ ุนูุฏ ุงูุฃุถุญู", "2025-05-26", "2025-06-14"),
    ("ุจุฏุงูุฉ ุงูุฏุฑุงุณุฉ ุจุนุฏ ุนูุฏ ุงูุฃุถุญู", "2025-06-15", "2025-06-26"),
    ("ุงุณุชููุงู ุงูุงุฎุชุจุงุฑุงุช ุจุนุฏ ุงูุนูุฏ", "2025-06-15", "2025-06-24"),
    ("ุงุนุชูุงุฏ ุงููุชุงุฆุฌ", "2025-06-25", "2025-06-25"),
    ("ุฅุฌุงุฒุฉ ููุงูุฉ ุงูุนุงู", "2025-06-26", "2025-08-23")
]

def get_status_icon(start_str, end_str):
    today = datetime.today().date()
    start = datetime.strptime(start_str, "%Y-%m-%d").date()
    end = datetime.strptime(end_str, "%Y-%m-%d").date()
    if today < start:
        return "โณ"
    elif start <= today <= end:
        return "โ"
    else:
        return "โ"

def calendar_keyboard():
    keyboard = []
    for i, (title, start, end) in enumerate(academic_events):
        icon = get_status_icon(start, end)
        text = f"{icon} {title} ({start} โ {end})"
        keyboard.append([InlineKeyboardButton(text, callback_data=f"event_{i}")])
    keyboard.append([InlineKeyboardButton("ุดุฑุญ ุงูุฑููุฒ", callback_data="legend")])
    return InlineKeyboardMarkup(keyboard)

async def welcome_if_needed(update: Update):
    uid = update.effective_user.id
    if uid not in shown_welcome:
        shown_welcome.add(uid)
        await update.message.reply_text("ุถุนุชุ ูุง ูููุช ุงุญุฏ ูุฑุฏ ุนูููุ ููุง ูููู\nุงูุง ููุง ุนุดุงูู", reply_markup=reply_markup)
        return True
    return False

# ูุงููุณ ุฏุฑุฌุงุช ูุน ุงูููุงุท ูุญุณุงุจ ุงููุนุฏู ูู 4
GRADE_POINTS = {
    "A+": 4.0,
    "A": 3.75,
    "B+": 3.5,
    "B": 3.0,
    "C+": 2.5,
    "C": 2.0,
    "D+": 1.5,
    "D": 1.0,
    "F": 0.0
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await welcome_if_needed(update)

async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if await welcome_if_needed(update):
        return

    msg = update.message.text.strip()

    # ููุง ุจุฏุฃูุง ุฅุถุงูุฉ ุฏุนู ุญุณุงุจ ุงููุนุฏู
    if msg == "ุญุณุงุจ ุงููุนุฏู ุงููุตูู":
        context.user_data["gpa_entries"] = []
        await update.message.reply_text(
            "ุญูุงู! ๐ ุฌุงูุฒ ูุญุณุงุจ ูุนุฏูู ุงููุตููุ\n"
            "ุฃุฑุณู ุงูููุงุฏ ุจุตูุบุฉ:\n"
            "ุนุฏุฏ ุงูุณุงุนุงุช/ุงูุฏุฑุฌุฉ ูุซู:\n"
            "`3/A+ 4/B 2/C+`\n\n"
            "ุจุนุฏ ูุง ุชุฎูุตุ ุฃุฑุณู *ุญุณุงุจ* ูุญุณุงุจ ุงููุนุฏูุ ุฃู *ุฅูุบุงุก* ููุฎุฑูุฌ.",
            parse_mode="Markdown"
        )
        return

    if "gpa_entries" in context.user_data:
        if msg.lower() == "ุญุณุงุจ":
            entries = context.user_data.get("gpa_entries", [])
            if not entries:
                await update.message.reply_text("โ ูุง ุฃุฏุฎูุช ุฃู ููุงุฏุ ุฃุฑุณู ุงูููุงุฏ ุฃููุงู.")
                return
            # ุนุฑุถ ุงูููุงุฏ ููุชุฃููุฏ
            text = "ูุฐู ุงูููุงุฏ ุงูุชู ุฃุฏุฎูุชูุง:\n"
            for i, (hours, grade) in enumerate(entries, start=1):
                text += f"{i}. {hours} ุณุงุนุงุช - ุงูุฏุฑุฌุฉ: {grade}\n"
            text += "\nูู ุชุฑูุฏ ุญุณุงุจ ุงููุนุฏู ุงูุขูุ"
            keyboard = InlineKeyboardMarkup([
                [
                    InlineKeyboardButton("ุญุณุงุจ", callback_data="gpa_calculate"),
                    InlineKeyboardButton("ุฅุนุงุฏุฉ ุฅุฏุฎุงู", callback_data="gpa_reset"),
                    InlineKeyboardButton("ุฅูุบุงุก", callback_data="gpa_cancel")
                ]
            ])
            await update.message.reply_text(text, reply_markup=keyboard)
            return
        elif msg.lower() == "ุฅูุบุงุก":
            context.user_data.pop("gpa_entries", None)
            await update.message.reply_text("ุชู ุฅูุบุงุก ุญุณุงุจ ุงููุนุฏู.", reply_markup=reply_markup)
            return
        else:
            # ูุญุงููุฉ ุชุญููู ุงูุฅุฏุฎุงู ุจุตูุบุฉ "ุนุฏุฏ ุงูุณุงุนุงุช/ุงูุฏุฑุฌุฉ"
            try:
                parts = msg.split()
                for part in parts:
                    hours_str, grade = part.split("/")
                    hours = int(hours_str.strip())
                    grade = grade.strip().upper()
                    if grade not in GRADE_POINTS:
                        await update.message.reply_text(f"โ ุงูุฏุฑุฌุฉ '{grade}' ุบูุฑ ุตุญูุญุฉ. ุฌุฑุจ ูุฑุฉ ุซุงููุฉ.")
                        return
                    context.user_data["gpa_entries"].append((hours, grade))
                await update.message.reply_text(
                    "โ ุชู ุฅุถุงูุฉ ุงูููุงุฏ. ุฃุฑุณู ุงููุฒูุฏ ุฃู ุฃุฑุณู *ุญุณุงุจ* ููุญุณุงุจุ ุฃู *ุฅูุบุงุก* ููุฎุฑูุฌ.",
                    parse_mode="Markdown"
                )
            except Exception:
                await update.message.reply_text(
                    "โ ุตูุบุฉ ุงูุฅุฏุฎุงู ุบูุฑ ุตุญูุญุฉ. ุงุณุชุนูู ุงูุตูุบุฉ: `ุนุฏุฏ ุงูุณุงุนุงุช/ุงูุฏุฑุฌุฉ` ูุซู `3/A+`.",
                    parse_mode="Markdown"
                )
            return

    # --- ููุง ุชุถุน ุจุงูู ุฃูุงูุฑู ุงูุฃุตููุฉ ---
    if msg == "ููุนุฏ ุงูููุงูุฃุฉ":
        today = datetime.today()
        bonus = datetime(today.year + (today.month == 12 and today.day > 26), (today.month % 12) + 1 if today.day > 26 else today.month, 26)
        left = (bonus - today).days
        await update.message.reply_text(f"ููุนุฏ ุงูููุงูุฃุฉ: {bonus.date()}\nุงููุชุจูู: {left} ููู")

    elif msg == "ุฃุฑูุงู ุงูุชูุงุตู":
        await update.message.reply_text("ุงููุงุชู: 920002122\nุงูุฅูููู: info@tu.edu.sa")

    elif msg == "ุชูููู ุงูุฏูุงุชุฑุฉ":
        await update.message.reply_text("https://t.me/tudoctors")

    elif msg == "ููุธููุฉ ุงูุฌุงูุนุฉ":
        await update.message.reply_text("https://edugate.tu.edu.sa")

    elif msg == "ุงูุจูุงู ุจูุฑุฏ":
        await update.message.reply_text("https://lms.tu.edu.sa")

    elif msg == "ูููุน ุฌุงูุนุฉ ุงูุทูุงุจ":
        await update.message.reply_text("https://maps.app.goo.gl/SJ2vYZt9wiqQYkx89")

    elif msg == "ูููุน ุฌุงูุนุฉ ุงูุทุงูุจุงุช":
        await update.message.reply_text("https://maps.app.goo.gl/BPwmcoQ7T16CT2FX8")

    elif msg == "ุญูู ุงูุชุฎุฑุฌ":
        await update.message.reply_photo("https://www2.0zz0.com/2025/05/15/07/864959598.jpeg")
